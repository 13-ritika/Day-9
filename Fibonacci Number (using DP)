//https://leetcode.com/problems/fibonacci-number/

// memoization approach. top down
class Solution {
    
    public int fib(int n) {
        int arr[] = new int[n+1];
        Arrays.fill(arr,-1);
        return fun(n,arr);
    }
    public int fun(int n, int[] arr) {
        if(arr[n]==-1){
            if(n==0|| n==1) arr[n] = n;
            else arr[n] = fun(n-1,arr) + fun(n-2,arr);
        }
        return arr[n];
    }
}

// sol 2 tabulation: bottom up
class Solution {
    public int fib(int n) {
        
        if (n == 0) {
            return 0;
        }
        
        int[] dp = new int[n + 1];
        dp[0] = 0;
        dp[1] = 1;
        if (n < 2) {
            return dp[n];
        }
        for (int i = 2; i <= n; i++) {
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        return dp[dp.length - 1];
    }
}
